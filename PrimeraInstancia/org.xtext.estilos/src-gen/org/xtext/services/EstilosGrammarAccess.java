/*
* generated by Xtext
*/
package org.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class EstilosGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class RootSistemaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RootSistema");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRootSistemaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cVistasKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVistasAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVistasVistaParserRuleCall_4_0 = (RuleCall)cVistasAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cVistasAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cVistasVistaParserRuleCall_5_1_0 = (RuleCall)cVistasAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RootSistema:
		//	"RootSistema" "{" "vistas" "{" vistas+=Vista ("," vistas+=Vista)* "}" "}";
		public ParserRule getRule() { return rule; }

		//"RootSistema" "{" "vistas" "{" vistas+=Vista ("," vistas+=Vista)* "}" "}"
		public Group getGroup() { return cGroup; }

		//"RootSistema"
		public Keyword getRootSistemaKeyword_0() { return cRootSistemaKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"vistas"
		public Keyword getVistasKeyword_2() { return cVistasKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//vistas+=Vista
		public Assignment getVistasAssignment_4() { return cVistasAssignment_4; }

		//Vista
		public RuleCall getVistasVistaParserRuleCall_4_0() { return cVistasVistaParserRuleCall_4_0; }

		//("," vistas+=Vista)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//vistas+=Vista
		public Assignment getVistasAssignment_5_1() { return cVistasAssignment_5_1; }

		//Vista
		public RuleCall getVistasVistaParserRuleCall_5_1_0() { return cVistasVistaParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class VistaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Vista");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cBarraBusquedaAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cBarraBusquedaBarraBusquedaKeyword_0_0 = (Keyword)cBarraBusquedaAssignment_0.eContents().get(0);
		private final Keyword cVistaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColorFondoKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cColorFondoAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cColorFondoEStringParserRuleCall_3_1_0 = (RuleCall)cColorFondoAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTecnologiaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTecnologiaAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTecnologiaTecnologiaEnumRuleCall_4_1_0 = (RuleCall)cTecnologiaAssignment_4_1.eContents().get(0);
		private final Keyword cLetraKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLetraAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLetraLetraParserRuleCall_6_0 = (RuleCall)cLetraAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Vista:
		//	barraBusqueda?="barraBusqueda"? "Vista" "{" ("colorFondo" colorFondo=EString)? ("tecnologia" tecnologia=Tecnologia)?
		//	"letra" letra=Letra "}";
		public ParserRule getRule() { return rule; }

		//barraBusqueda?="barraBusqueda"? "Vista" "{" ("colorFondo" colorFondo=EString)? ("tecnologia" tecnologia=Tecnologia)?
		//"letra" letra=Letra "}"
		public Group getGroup() { return cGroup; }

		//barraBusqueda?="barraBusqueda"?
		public Assignment getBarraBusquedaAssignment_0() { return cBarraBusquedaAssignment_0; }

		//"barraBusqueda"
		public Keyword getBarraBusquedaBarraBusquedaKeyword_0_0() { return cBarraBusquedaBarraBusquedaKeyword_0_0; }

		//"Vista"
		public Keyword getVistaKeyword_1() { return cVistaKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("colorFondo" colorFondo=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"colorFondo"
		public Keyword getColorFondoKeyword_3_0() { return cColorFondoKeyword_3_0; }

		//colorFondo=EString
		public Assignment getColorFondoAssignment_3_1() { return cColorFondoAssignment_3_1; }

		//EString
		public RuleCall getColorFondoEStringParserRuleCall_3_1_0() { return cColorFondoEStringParserRuleCall_3_1_0; }

		//("tecnologia" tecnologia=Tecnologia)?
		public Group getGroup_4() { return cGroup_4; }

		//"tecnologia"
		public Keyword getTecnologiaKeyword_4_0() { return cTecnologiaKeyword_4_0; }

		//tecnologia=Tecnologia
		public Assignment getTecnologiaAssignment_4_1() { return cTecnologiaAssignment_4_1; }

		//Tecnologia
		public RuleCall getTecnologiaTecnologiaEnumRuleCall_4_1_0() { return cTecnologiaTecnologiaEnumRuleCall_4_1_0; }

		//"letra"
		public Keyword getLetraKeyword_5() { return cLetraKeyword_5; }

		//letra=Letra
		public Assignment getLetraAssignment_6() { return cLetraAssignment_6; }

		//Letra
		public RuleCall getLetraLetraParserRuleCall_6_0() { return cLetraLetraParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class LetraElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Letra");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLetraAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLetraKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColorLetraKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cColorLetraAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cColorLetraEStringParserRuleCall_3_1_0 = (RuleCall)cColorLetraAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFuenteKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFuenteAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cFuenteEStringParserRuleCall_4_1_0 = (RuleCall)cFuenteAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTamanoKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTamanoAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTamanoTamanoLetraEnumRuleCall_5_1_0 = (RuleCall)cTamanoAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Letra:
		//	{Letra} "Letra" "{" ("colorLetra" colorLetra=EString)? ("fuente" fuente=EString)? ("tamano" tamano=TamanoLetra)? "}";
		public ParserRule getRule() { return rule; }

		//{Letra} "Letra" "{" ("colorLetra" colorLetra=EString)? ("fuente" fuente=EString)? ("tamano" tamano=TamanoLetra)? "}"
		public Group getGroup() { return cGroup; }

		//{Letra}
		public Action getLetraAction_0() { return cLetraAction_0; }

		//"Letra"
		public Keyword getLetraKeyword_1() { return cLetraKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("colorLetra" colorLetra=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"colorLetra"
		public Keyword getColorLetraKeyword_3_0() { return cColorLetraKeyword_3_0; }

		//colorLetra=EString
		public Assignment getColorLetraAssignment_3_1() { return cColorLetraAssignment_3_1; }

		//EString
		public RuleCall getColorLetraEStringParserRuleCall_3_1_0() { return cColorLetraEStringParserRuleCall_3_1_0; }

		//("fuente" fuente=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"fuente"
		public Keyword getFuenteKeyword_4_0() { return cFuenteKeyword_4_0; }

		//fuente=EString
		public Assignment getFuenteAssignment_4_1() { return cFuenteAssignment_4_1; }

		//EString
		public RuleCall getFuenteEStringParserRuleCall_4_1_0() { return cFuenteEStringParserRuleCall_4_1_0; }

		//("tamano" tamano=TamanoLetra)?
		public Group getGroup_5() { return cGroup_5; }

		//"tamano"
		public Keyword getTamanoKeyword_5_0() { return cTamanoKeyword_5_0; }

		//tamano=TamanoLetra
		public Assignment getTamanoAssignment_5_1() { return cTamanoAssignment_5_1; }

		//TamanoLetra
		public RuleCall getTamanoTamanoLetraEnumRuleCall_5_1_0() { return cTamanoTamanoLetraEnumRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	public class TecnologiaElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Tecnologia");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndroidEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndroidAndroidKeyword_0_0 = (Keyword)cAndroidEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIOSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIOSIOSKeyword_1_0 = (Keyword)cIOSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWebEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWebWebKeyword_2_0 = (Keyword)cWebEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Tecnologia:
		//	android | iOS | web;
		public EnumRule getRule() { return rule; }

		//android | iOS | web
		public Alternatives getAlternatives() { return cAlternatives; }

		//android
		public EnumLiteralDeclaration getAndroidEnumLiteralDeclaration_0() { return cAndroidEnumLiteralDeclaration_0; }

		//"android"
		public Keyword getAndroidAndroidKeyword_0_0() { return cAndroidAndroidKeyword_0_0; }

		//iOS
		public EnumLiteralDeclaration getIOSEnumLiteralDeclaration_1() { return cIOSEnumLiteralDeclaration_1; }

		//"iOS"
		public Keyword getIOSIOSKeyword_1_0() { return cIOSIOSKeyword_1_0; }

		//web
		public EnumLiteralDeclaration getWebEnumLiteralDeclaration_2() { return cWebEnumLiteralDeclaration_2; }

		//"web"
		public Keyword getWebWebKeyword_2_0() { return cWebWebKeyword_2_0; }
	}

	public class TamanoLetraElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "TamanoLetra");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSmallEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSmallSmallKeyword_0_0 = (Keyword)cSmallEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMediumEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMediumMediumKeyword_1_0 = (Keyword)cMediumEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLargeEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLargeLargeKeyword_2_0 = (Keyword)cLargeEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TamanoLetra:
		//	small | medium | large;
		public EnumRule getRule() { return rule; }

		//small | medium | large
		public Alternatives getAlternatives() { return cAlternatives; }

		//small
		public EnumLiteralDeclaration getSmallEnumLiteralDeclaration_0() { return cSmallEnumLiteralDeclaration_0; }

		//"small"
		public Keyword getSmallSmallKeyword_0_0() { return cSmallSmallKeyword_0_0; }

		//medium
		public EnumLiteralDeclaration getMediumEnumLiteralDeclaration_1() { return cMediumEnumLiteralDeclaration_1; }

		//"medium"
		public Keyword getMediumMediumKeyword_1_0() { return cMediumMediumKeyword_1_0; }

		//large
		public EnumLiteralDeclaration getLargeEnumLiteralDeclaration_2() { return cLargeEnumLiteralDeclaration_2; }

		//"large"
		public Keyword getLargeLargeKeyword_2_0() { return cLargeLargeKeyword_2_0; }
	}
	
	private final RootSistemaElements pRootSistema;
	private final VistaElements pVista;
	private final EStringElements pEString;
	private final EBooleanElements pEBoolean;
	private final LetraElements pLetra;
	private final TecnologiaElements unknownRuleTecnologia;
	private final TamanoLetraElements unknownRuleTamanoLetra;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EstilosGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRootSistema = new RootSistemaElements();
		this.pVista = new VistaElements();
		this.pEString = new EStringElements();
		this.pEBoolean = new EBooleanElements();
		this.pLetra = new LetraElements();
		this.unknownRuleTecnologia = new TecnologiaElements();
		this.unknownRuleTamanoLetra = new TamanoLetraElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.Estilos".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RootSistema:
	//	"RootSistema" "{" "vistas" "{" vistas+=Vista ("," vistas+=Vista)* "}" "}";
	public RootSistemaElements getRootSistemaAccess() {
		return pRootSistema;
	}
	
	public ParserRule getRootSistemaRule() {
		return getRootSistemaAccess().getRule();
	}

	//Vista:
	//	barraBusqueda?="barraBusqueda"? "Vista" "{" ("colorFondo" colorFondo=EString)? ("tecnologia" tecnologia=Tecnologia)?
	//	"letra" letra=Letra "}";
	public VistaElements getVistaAccess() {
		return pVista;
	}
	
	public ParserRule getVistaRule() {
		return getVistaAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//EBoolean returns ecore::EBoolean:
	//	"true" | "false";
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	//Letra:
	//	{Letra} "Letra" "{" ("colorLetra" colorLetra=EString)? ("fuente" fuente=EString)? ("tamano" tamano=TamanoLetra)? "}";
	public LetraElements getLetraAccess() {
		return pLetra;
	}
	
	public ParserRule getLetraRule() {
		return getLetraAccess().getRule();
	}

	//enum Tecnologia:
	//	android | iOS | web;
	public TecnologiaElements getTecnologiaAccess() {
		return unknownRuleTecnologia;
	}
	
	public EnumRule getTecnologiaRule() {
		return getTecnologiaAccess().getRule();
	}

	//enum TamanoLetra:
	//	small | medium | large;
	public TamanoLetraElements getTamanoLetraAccess() {
		return unknownRuleTamanoLetra;
	}
	
	public EnumRule getTamanoLetraRule() {
		return getTamanoLetraAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
